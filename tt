package May10;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.Timer;

public class Game {

	public static void main(String[] args) {
		Tutor tt=new Tutor("Deeney's former club Walsall are due a cut of any fee while the player is one year into a new five year contract.Deeney is understood to be concerned at how his season finished under Walter Mazzarri and, though the Italian coach is being repla");
	}

public class Tutor extends JFrame implements ActionListener {
	JLabel lblTimer;
	JLabel lblScore;
	JLabel lblWord;
	JTextArea lblText;
	JButton btnStart;
	JButton btnStop;
	
	boolean isRunning;
	int score;
	int timeLeft;
	Timer timer;
	String[] data;

	public Tutor(String feeder) {
		data = feeder.split(" ");
		super.setSize(1000, 1000);
		super.setTitle("Typing Tutor");
		GridLayout layout = new GridLayout(3, 2);
		super.setLayout(layout);
		lblTimer = new JLabel("");
		addComponent(lblTimer);
		lblScore = new JLabel("");
		addComponent(lblScore);
		lblWord = new JLabel("");
		addComponent(lblWord);
		lblText = new JTextArea();
		addComponent(lblText);
		btnStart = new JButton("");
		btnStart.addActionListener(this);
		addComponent(btnStart);
		btnStop = new JButton("");
		addComponent(btnStop);
		btnStop.addActionListener(this);
		super.setVisible(true);
		initGame();
	}

	public void addComponent(JComponent comp) {
		Font font = new Font("Comic Sans MS", 1, 100);
		comp.setFont(font);
		super.add(comp);

	}

	private void initGame() {
		score = 0;
		timeLeft = 50;
		isRunning=false;
		timer = new Timer(3000, this);
		btnStop.setEnabled(false);
		lblTimer.setText("Timer:" + timeLeft);
		lblScore.setText("Score:" + score);
		lblText.setText("");
		lblWord.setText("");
		btnStart.setText("Start");
		btnStop.setText("Stop");

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnStart) {
			handleStart();
		} else if (e.getSource() == btnStop) {
			handleStop();
		} else if (e.getSource() == timer) {
			handletimer();
		}
	}

	private void handleStart() {
		if(isRunning){
			timer.stop();
			btnStart.setText("Start");
			isRunning=false;
		}
		else{
			timer.start();
			isRunning=true;
			btnStart.setText("Pause");
			btnStop.setEnabled(true);
		}
	}

	private void handleStop() {
		timer.stop();
		int j=JOptionPane.showConfirmDialog(this, "Do you want to restart");
		if(j==JOptionPane.YES_OPTION){
		initGame();	
		}
		else{
			super.dispose();
		}
	}

	private void handletimer(){
		if(timeLeft>0){
			int index=(int)(Math.random()*data.length-1);
			timeLeft--;
			lblTimer.setText("Timer:"+timeLeft);
			String e=lblWord.getText();
			String input=lblText.getText();
			if(input.equals(e)){
				score++;
				lblScore.setText("Score:"+score);
			}
			String expected=data[index];
			lblWord.setText(expected);
			lblText.setText("");
			lblText.setFocusable(true);
			
		}
		else{
			handleStop();
		}
	}
}
